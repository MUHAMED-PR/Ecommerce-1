<%- include('../layouts/adminHeader.ejs') %>

<!-- Layout wrapper -->
<div class="layout-wrapper layout-content-navbar">
    <div class="layout-container">
        <!-- Layout container -->
        <div class="layout-page">
            <!-- Navbar -->
            <nav class="layout-navbar container-xxl navbar navbar-expand-xl navbar-detached align-items-center bg-white shadow-sm" id="layout-navbar">
                <div class="layout-menu-toggle navbar-nav align-items-xl-center me-3 me-xl-0 d-xl-none">
                    <a class="nav-item nav-link px-0 me-xl-4" href="javascript:void(0)">
                        <i class="bx bx-menu bx-sm"></i>
                    </a>
                </div>

                <div class="navbar-nav-right d-flex align-items-center w-100" id="navbar-collapse">
                    <!-- Search -->
                    <div class="navbar-nav align-items-center">
                        <div class="nav-item d-flex align-items-center">
                            <i class="bx bx-search fs-4 lh-0 text-muted"></i>
                            <input type="text" class="form-control border-0 shadow-sm" placeholder="Search..." aria-label="Search..." />
                        </div>
                    </div>
                    <!-- /Search -->

                    <ul class="navbar-nav flex-row align-items-center ms-auto">
                        <!-- User options here -->
                    </ul>
                </div>
            </nav>
            <!-- / Navbar -->

            <!-- Content wrapper -->
            <div class="content-wrapper p-4">
                <!-- Header Section -->
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h3 class="fw-bold text-dark">üìä Sales Dashboard</h3>
                
                    <div>
                        <button class="btn btn-primary shadow-sm rounded-pill" id="selectDateBtn">Select Date</button>
                
                        <!-- Date input fields (hidden by default) -->
                        <div id="dateInputs" style="display: none; margin-top: 10px;">
                            <div class="d-flex">
                                <input type="date" class="form-control me-2 shadow-sm" placeholder="From" id="fromDate">
                                <input type="date" class="form-control shadow-sm" placeholder="End" id="endDate">
                                <button id="applyDate" class="btn btn-success ms-2 shadow-sm">Apply</button>
                            </div>
                        </div>
                    </div>
                </div>
                
                  
                  

                <!-- Summary Cards -->
                <div class="row g-3 mb-4">
                    <!-- Total Sales Card -->
                    <div class="col-md-3">
                        <div class="card h-100 border-0 shadow-lg" style="background-color: #bdbbe4;">
                            <div class="card-body text-center text-white">
                                <h5 class="mb-2">Total Sales</h5>
                                <h2>‚Çπ<%= totalSale %></h2>
                            </div>
                        </div>
                    </div>

                    <!-- Total Orders Card -->
                    <div class="col-md-3">
                        <div class="card h-100 border-0 shadow-lg" style="background-color: #98b3de;">
                            <div class="card-body text-center text-white">
                                <h5 class="mb-2">Total Orders</h5>
                                <h2><%= orders.length %></h2>
                            </div>
                        </div>
                    </div>

                    <!-- Avg Order Value Card -->
                    <div class="col-md-3">
                        <div class="card h-100 border-0 shadow-lg" style="background-color: #51f2ca;">
                            <div class="card-body text-center text-white">
                                <h5 class="mb-2">Avg Order Value</h5>
                                <h2>‚Çπ<%= (totalSale/orders.length).toFixed(2) %></h2>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Detailed Sales Table -->
<div class="card border-0 shadow-lg mb-4">
    <div class="card-header bg-primary text-white py-3 d-flex justify-content-between align-items-center">
        <h5 class="mb-0">üìù Sales Details</h5>
        <div>
            <button class="btn btn-light" id="downloadPdfBtn">Download as PDF</button>
            <button class="btn btn-light" id="downloadCsvBtn">Download as CSV</button>
        </div>
    </div>
    <div class="card-body p-0">
        <% if (orders.length > 0) { %>
            <!-- Table displaying orders -->
            <table class="table table-hover table-borderless mb-0" id="salesTable">
                <thead class="table-light">
                    <tr class="text-center">
                        <th>Sl No.</th>
                        <th>Date</th>
                        <th>User Name</th>
                        <th>Order ID</th>
                        <th>Order Details</th>
                        <th>Revenue</th>
                    </tr>
                </thead>
                <tbody>
                    <% let totalRevenue = 0; %>
                    <% orders.forEach((order, i) => { %>
                        <tr class="text-center">
                            <td><%= i + 1 %></td>
                            <td><%= new Date(order.orderDate).toLocaleDateString() %></td>
                            <td><%= order.userId.userName %></td>
                            <td><%= order._id %></td>
                            <td>
                                <span class="product-name" 
                                      data-order-id="<%= order._id %>" 
                                      data-user-name="<%= order.userId.userName %>" 
                                      data-product-name="<%= order.products[0].productId.name %>" 
                                      data-quantity="<%= order.products[0].quantity %>" 
                                      data-revenue="<%= order.totalAmount %>">
                                    <%= order.products[0].productId.name %>
                                </span>
                                <a href="#" class="details-icon" 
                                   title="Click here to see more details" 
                                   data-bs-toggle="modal" 
                                   data-bs-target="#orderDetailsModal">
                                   <i class='bx bx-info-circle'></i>
                                </a>
                            </td>
                            <td>‚Çπ<%= order.totalAmount %></td>
                        </tr>
                        <% totalRevenue += order.totalAmount; %>
                    <% }) %>
                </tbody>
                <tfoot>
                    <tr class="text-center">
                        <td colspan="5"><strong>Total Revenue</strong></td>
                        <td><strong>‚Çπ<%= totalRevenue %></strong></td>
                    </tr>
                </tfoot>
            </table>
        <% } else { %>
            <p class="text-center my-3">No sales available for the selected date range.</p>
        <% } %>
    </div>
</div>

            </div>
        </div>
    </div>
</div>

<!-- Modal to display order details -->
<div class="modal fade" id="orderDetailsModal" tabindex="-1" aria-labelledby="orderDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="orderDetailsModalLabel">Order Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p><strong>Order ID:</strong> <span id="modalOrderId"></span></p>
                <p><strong>User Name:</strong> <span id="modalUserName"></span></p>
                <p><strong>Product Name:</strong> <span id="modalProductName"></span></p>
                <p><strong>Quantity:</strong> <span id="modalQuantity"></span></p>
                <p><strong>Total Revenue:</strong> <span id="modalRevenue"></span></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Include Bootstrap JS for modal functionality -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    // Toggle the visibility of the date inputs when the "Select Date" button is clicked
    document.getElementById('selectDateBtn').addEventListener('click', function() {
      const dateInputs = document.getElementById('dateInputs');
      if (dateInputs.style.display === 'none' || dateInputs.style.display === '') {
        dateInputs.style.display = 'block'; // Show the date inputs
      } else {
        dateInputs.style.display = 'none'; // Hide the date inputs
      }
    });
    
    function sortByDate() {
    const fromDate = document.getElementById('fromDate').value;
    const endDate = document.getElementById('endDate').value;

    if (!fromDate || !endDate) {
        alert("Please select both start and end dates.");
        return;
    }

    // Fetch the sales data from the server with date range
    fetch(`/admin/dateSortedSales?fromDate=${fromDate}&endDate=${endDate}`)
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                const orders = data.orders;
                updateOrdersTable(orders); // Call the function to update the table with fetched orders
            } else {
                console.error('Failed to fetch data:', data.message);
            }
        })
        .catch(error => {
            console.error('Error during fetch operation:', error);
        });
}

// Function to update the table with sorted orders
function updateOrdersTable(orders) {
    const tableBody = document.querySelector('tbody'); // Assuming there's only one table on the page
    tableBody.innerHTML = ''; // Clear the previous data

    let totalRevenue = 0;

    if (orders.length > 0) {
        orders.forEach((order, index) => {
            const orderRow = `
                <tr class="text-center">
                    <td>${index + 1}</td>
                    <td>${new Date(order.orderDate).toLocaleDateString()}</td>
                    <td>${order.userId.userName}</td>
                    <td>${order._id}</td>
                    <td>
                        <span class="product-name" 
                              data-order-id="${order._id}" 
                              data-user-name="${order.userId.userName}" 
                              data-product-name="${order.products[0].productId.name}" 
                              data-quantity="${order.products[0].quantity}" 
                              data-revenue="${order.totalAmount}">
                              ${order.products[0].productId.name}
                        </span>
                        <a href="#" class="details-icon" 
                           title="Click here to see more details" 
                           data-bs-toggle="modal" 
                           data-bs-target="#orderDetailsModal">
                           <i class='bx bx-info-circle'></i>
                        </a>
                    </td>
                    <td>‚Çπ${order.totalAmount}</td>
                </tr>
            `;
            tableBody.innerHTML += orderRow;
            totalRevenue += order.totalAmount;
        });

        // Add the total revenue row in the table footer
        document.querySelector('tfoot').innerHTML = `
            <tr class="text-center">
                <td colspan="5"><strong>Total Revenue</strong></td>
                <td><strong>‚Çπ${totalRevenue}</strong></td>
            </tr>
        `;
    } else {
        tableBody.innerHTML = `
            <tr>
                <td colspan="6" class="text-center">No sales available for the selected date range.</td>
            </tr>
        `;
    }
}

// Set the event listener for "Apply" button
document.getElementById("applyDate").addEventListener("click", function () {
    sortByDate();
});

  </script>

<!-- JavaScript for handling click event and displaying modal -->
<script>
   document.addEventListener('DOMContentLoaded', function () {
    // Use event delegation to capture clicks on dynamically loaded elements
    document.body.addEventListener('click', function(e) {
        // Check if the clicked element has the 'product-name' class
        if (e.target.classList.contains('product-name')) {
            console.log("Element clicked:", e.target);

            // Retrieve the data attributes from the clicked element
            const orderId = e.target.getAttribute('data-order-id');
            const userName = e.target.getAttribute('data-user-name');
            const productName = e.target.getAttribute('data-product-name');
            const quantity = e.target.getAttribute('data-quantity');
            const revenue = e.target.getAttribute('data-revenue');


            // Ensure the values exist before displaying them
            if (orderId && userName && productName && quantity && revenue) {
                // Populate the modal fields with the correct data
                document.getElementById('modalOrderId').innerText = orderId;
                document.getElementById('modalUserName').innerText = userName;
                document.getElementById('modalProductName').innerText = productName;
                document.getElementById('modalQuantity').innerText = quantity;
                document.getElementById('modalRevenue').innerText = '‚Çπ' + revenue;

                // Show the modal using Bootstrap's JavaScript API
                const modal = new bootstrap.Modal(document.getElementById('orderDetailsModal'));
                modal.show();
            } else {
                console.error("Missing data attributes. Modal cannot be populated.");
            }
        }
    });
});



//Download:
// Function to download table as PDF
document.getElementById('downloadPdfBtn').addEventListener('click', function () {
    const element = document.getElementById('salesTable');
    const opt = {
        margin: 1,
        filename: 'Sales_Details.pdf',
        image: { type: 'jpeg', quality: 0.98 },
        html2canvas: { scale: 2 },
        jsPDF: { unit: 'in', format: 'letter', orientation: 'portrait' }
    };
    // Use html2pdf to create the PDF
    html2pdf().from(element).set(opt).save();
});

// Function to download table as CSV
document.getElementById('downloadCsvBtn').addEventListener('click', function () {
    const table = document.getElementById('salesTable');
    const rows = Array.from(table.querySelectorAll('tr'));
    const csvContent = rows.map(row => {
        const cols = Array.from(row.querySelectorAll('td, th'))
                          .map(col => col.innerText)
                          .join(',');
        return cols;
    }).join('\n');

    // Create a link element and trigger a download
    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
    const url = URL.createObjectURL(blob);
    const link = document.createElement('a');
    link.setAttribute('href', url);
    link.setAttribute('download', 'Sales_Details.csv');
    link.style.visibility = 'hidden';
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
});


</script>

<!-- pdf -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.9.2/html2pdf.bundle.js"></script>
<!-- exel -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.4/xlsx.full.min.js"></script>


<%- include('../layouts/adminFooter.ejs') %>